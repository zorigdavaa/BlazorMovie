<EditForm OnInvalidSubmit="OnValidSubmit" Model="Movie">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Title:</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Title"></InputText>
            <ValidationMessage For="@(()=>Movie.Title)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>In Theaters</label>
        <div>
            <InputCheckbox @bind-Value="Movie.InTheaters"></InputCheckbox>
            <ValidationMessage For="@(()=>Movie.InTheaters)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Trailer:</label>
        <div>
            <InputText class="form-control" @bind-Value="Movie.Trailer"></InputText>
            <ValidationMessage For="@(()=>Movie.Trailer)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Release Date:</label>
        <div>
            <InputDate class="form-control" @bind-Value="Movie.ReleaseDate"></InputDate>

            <ValidationMessage For="@(()=>Movie.Trailer)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <InputImage Label="Picture" OnSelectedImage="OnSelectedImage" imageURL="@imageURl" />
    </div>
    <div class="form-group form-markdown">
        <InputMarkDown @bind-Value="Movie.Summary" For="@(()=>Movie.Summary)" Label="Summary"></InputMarkDown>
    </div>
    <div class="form-group">
        <label>Genre:</label>
        <MultipleSelector Selected="Selected" NoSelected="NoSelected"></MultipleSelector>
    </div>
    <div class="form-group">
        <label>Actors:</label>
        <MultipleSelectorTypeAhead Context="person" SearchMethod="SearchMethod" SelectedElements="SelectedActor">
            <MyResultTemplate>
                <img style="width:50px" src="@person.Picture" />
                @person.Name
            </MyResultTemplate>
            <MyListTemplate>
                @person.Name
            </MyListTemplate>
        </MultipleSelectorTypeAhead>
    </div>


    <button type="submit" class="btn btn-primary" style="margin-bottom:20px">Save</button>

</EditForm>

@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Genre> SelectedGenre { get; set; } = new List<Genre>();
    [Parameter] public List<Genre> NotSelectedGenre { get; set; } = new List<Genre>();
    [Parameter] public List<Person> SelectedActor { get; set; } = new List<Person>();

    private List<MultipleSelectorModel> Selected { get; set; }
    private List<MultipleSelectorModel> NoSelected { get; set; }

    private string imageURl;

    protected override void OnInitialized()
    {
        Selected = SelectedGenre.Select(x => new MultipleSelectorModel { Key = x.Id.ToString(), Value = x.Name }).ToList();
        NoSelected = NotSelectedGenre.Select(x => new MultipleSelectorModel { Key = x.Id.ToString(), Value = x.Name }).ToList();

        imageURl = Movie.Poster;
        Movie.Poster = null;
    }
    void OnSelectedImage(string imageBase64)
    {
        Movie.Poster = imageBase64;
        imageURl = null;
    }
    private async Task<IEnumerable<Person>> SearchMethod(string searchText)
    {
        await Task.Delay(2000);

        return new List<Person>() { new Person { Id=1, Name="Mariah", BioGraphy="hahhaha", DateOfBirth=DateTime.Parse("1991-06-04"), Picture="https://scontent.fuln8-1.fna.fbcdn.net/v/t1.0-9/s960x960/81639706_10157900365092766_5021815628093194240_o.jpg?_nc_cat=104&_nc_sid=dd9801&_nc_ohc=5VTezNNUB6MAX9hZFoY&_nc_ht=scontent.fuln8-1.fna&_nc_tp=7&oh=96416a7c3319c3d88fbb83b38cc4d728&oe=5EDF0307" },
                                    new Person { Id=2, Name="Caray", BioGraphy="Muuhaha", DateOfBirth=DateTime.Parse("1992-05-09"), Picture="https://bloximages.chicago2.vip.townnews.com/santamariatimes.com/content/tncms/assets/v3/editorial/0/25/025939fd-11e8-534c-86ad-37ebf6fb3ef8/5dfc964c54ac5.image.jpg"}};
    }
}
