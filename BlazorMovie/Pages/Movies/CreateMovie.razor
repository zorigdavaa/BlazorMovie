@page "/movies/create"
@inject NavigationManager navigationmanager
@inject IMovieRepository movieRepository
@inject IGenreRepository genreRepo
@attribute [Authorize]

<h3>CreateMovie</h3>
@if (NotSelectedGenre != null)
{

    <MovieForm Movie="Movie" OnValidSubmit="SaveMovie" NotSelectedGenre="NotSelectedGenre"></MovieForm>
}

@code {
    public Movie Movie { get; set; } = new Movie();
    public List<Genre> NotSelectedGenre { get; set; }


    protected override async Task OnInitializedAsync()
    {
        NotSelectedGenre = await genreRepo.GetGenres();
    }

    private async Task SaveMovie()
    {
        try
        {
            var movieId = await movieRepository.CreateMovie(Movie);

            navigationmanager.NavigateTo($"/movie/{movieId}/{Movie.Title.Replace(" ", "-")}");
        }
        catch (System.Net.WebException webexception)
        {
            var response = (System.Net.HttpWebResponse) webexception.Response;
            if (response.StatusCode==System.Net.HttpStatusCode.Unauthorized)
            {

            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);

            throw new ApplicationException(e.Message);
        }

    }

}
